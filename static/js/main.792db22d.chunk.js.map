{"version":3,"sources":["Components/Layout/Header-Component.js","Components/Layout/Instructions-Components.js","Components/Context/Context.js","Components/Add_Fighter-Components.js","Components/List_Fighter_Battle-Components.js","Components/Result_Battle-Component.js","Components/Layout/Footer-Component.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Instructions","Context","React","createContext","reducer","state","action","type","showTableFight","payload","fighters","showResultBattle","arrayAutoBots","arrayDecepticons","item","team","push","autobotsTeam","decepticonsTeam","Provider","dispatch","setState","value","this","props","children","Component","Consumer","Add_Fighter","useState","name","setName","setTeam","strength","setStrength","endurance","setEndurance","firepower","setFirepower","intelligence","setIntelligence","rank","setRank","skill","setSkill","speed","setSpeed","courage","setCourage","showTable","setShowFightTable","onChange","e","target","onSubmit","preventDefault","abilities","overall","parseInt","bind","placeholder","required","selected","disabled","min","max","onClick","List_Fighter_Battle","resultBattle","setResultBattle","reverse","scope","Object","values","map","val","index","key","fight","Result_Battle","numberBattles","setNumberBattles","battleResult","setBattleResult","Alldestroyed","setAlldestroyed","survivingFighters","setSurvivingFighters","winnerTeamArray","numberOfSurvivor","autoBolts","decepticons","survivor","battleField","autoboltsTeam","differenceFightersNumber","loseTeamArray","Variautobolt","Varidecepticons","battleNum","pointOfSkillsAuto","pointOfSkillsDecep","duplicateOptimos","reduce","acc","duplicatePredaking","i","length","pop","toLowerCase","some","compareResult","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.792db22d.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n    return(\n        <>\n            <header>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <h1>Transformers: War of Cybertron</h1>\n                        </div>\n                    </div>\n                </div>\n            </header>\n        </>\n    )\n}\nexport default Header;","import React from 'react';\n\nconst Instructions = () => {\n    return(\n        <>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <h2>Instructions</h2>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <p>\n                            The Transformers are at war and you are in charge of settling the score!\n                            The power is in your hand to decide the future of Cybertron.\n                        </p>\n                        <ul>\n                            <li>1) Add the name of your transformer and choose your team.</li>\n                            <li>2) Add your Transformer's skill points. The points range from 1 to 10.</li>\n                            <li>3) Click the add fighter button. You can add as many fighters as you want.</li>\n                            <li>4) Click on the \"Fight\" button and watch the result of that battle.</li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\nexport default Instructions;","import React from \"react\";\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case \"SHOWTABLE\":\n        return {\n          ...state,\n          showTableFight: [action.payload]\n        }\n      case \"ADD\":\n        return {\n          ...state,\n          fighters: [action.payload, ...state.fighters]\n        }\n        case \"SHOWRESULT\":\n        return {\n          ...state,\n          showResultBattle: [action.payload]\n        }\n        case \"FIGHT\":\n        let arrayAutoBots = [];\n        let arrayDecepticons = [];\n        for(let item of action.payload) {\n            if(item.team == \"Autobots\") {\n                arrayAutoBots.push(item)\n            }\n            else {\n                arrayDecepticons.push(item)\n            }\n        }\n        return {\n            ...state,\n            autobotsTeam: [...arrayAutoBots],\n            decepticonsTeam: [...arrayDecepticons]\n      };\n        default:\n          return state\n    }\n  }\n\nexport class Provider extends React.Component {\n    state = {\n        fighters: [],\n        autobotsTeam: [],\n        decepticonsTeam: [],\n        showTableFight: false,\n        showResultBattle: false,\n        dispatch: action => {\n            this.setState(state => {\n              return reducer(state, action);\n            });\n          },\n      };\n      \n    render() {\n        return (\n          <Context.Provider value={this.state}>\n            {this.props.children}\n          </Context.Provider>\n        );\n      }\n}\nexport const Consumer = Context.Consumer;\n","import React, { useState} from 'react';\nimport {Consumer} from './Context/Context';\n\nconst Add_Fighter = () => {\n    const [name,setName] = useState(\"\");\n    const [team,setTeam] = useState(\"\");\n    const [strength,setStrength] = useState(\"\");\n    const [endurance,setEndurance] = useState(\"\");             \n    const [firepower,setFirepower] = useState(\"\");      \n    const [intelligence,setIntelligence] = useState(\"\");      \n    const [rank,setRank] = useState(\"\");      \n    const [skill,setSkill] = useState(\"\");      \n    const [speed,setSpeed] = useState(\"\");      \n    const [courage,setCourage] = useState(\"\");\n    const [showTable,setShowFightTable] = useState(false);\n\n    const onChange = e => {\n        let element = (e.target.name);\n        switch (element) {\n          case 'name':\n            setName(e.target.value)\n          break;\n          case 'team':\n            setTeam(e.target.value)\n          break;\n          case 'strength':\n            setStrength(e.target.value)\n          break;\n          case 'endurance':\n            setEndurance(e.target.value)\n          break;\n          case 'firepower':\n            setFirepower(e.target.value)\n          break;\n          case 'intelligence':\n            setIntelligence(e.target.value)\n          break;\n          case 'rank':\n            setRank(e.target.value)\n          break;\n          case 'skill':\n            setSkill(e.target.value)\n          break;\n          case 'speed':\n            setSpeed(e.target.value)\n          break;\n          case 'courage':\n            setCourage(e.target.value)\n          break;\n        }\n      }\n      const onSubmit = (dispatch, e) => {\n        e.preventDefault();\n        const newFighter = {\n          name, \n          team,\n          abilities:{\n            strength,\n            endurance,\n            firepower,\n            intelligence,\n            rank,\n            skill,\n            speed,\n            courage,\n            overall: parseInt(strength) + parseInt(strength) + parseInt(intelligence) + parseInt(speed) + parseInt(endurance) + parseInt(firepower)\n          }\n        }\n        dispatch({type: \"ADD\", payload: newFighter});\n\n     //Clear the fields after submitting\n      setName(\"\");\n      setStrength(\" \");\n      setEndurance(\" \");\n      setFirepower(\" \");\n      setIntelligence(\" \");\n      setSkill(\" \")\n      setSpeed(\" \");\n      setRank(\" \")\n      setCourage(\" \");\n      setTeam(null);\n      }\n\n      const showTableFight  = (dispatch) => {\n        setShowFightTable(true)\n        dispatch({type: \"SHOWTABLE\", payload: showTable});\n    }\n    return(\n        <Consumer>\n            {value => {\n                const {dispatch} = value;\n                return(\n                    <>\n                       <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <h2>Add your Fighter</h2>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <form onSubmit={onSubmit.bind(this,dispatch)}> \n                                    <div className=\"form-row\">\n                                            <div className=\"col\">\n                                                <input \n                                                    type=\"text\" \n                                                    className=\"form-control\" \n                                                    placeholder=\"Name of your Transformers\"\n                                                    name=\"name\"\n                                                    value={name}\n                                                    onChange={onChange}\n                                                    required\n                                                />\n                                            </div>\n                                            <div className=\"col\">\n                                                <select \n                                                    className=\"custom-select\"\n                                                    name=\"team\" \n                                                    onChange={onChange}\n                                                    required\n                                                    >\n                                                    <option selected disabled>Choose your Team</option>\n                                                    <option value=\"Autobots\">Autobots</option>\n                                                    <option value=\"Decepticons\">Decepticons</option>\n                                                </select>\n                                            </div>\n                                            <div className=\"col-12\">\n                                                <h3>Abilities</h3>\n                                            </div>\n                                            <div className=\"col-3\">\n                                                <input \n                                                    type=\"number\" \n                                                    className=\"form-control\" \n                                                    min=\"1\" \n                                                    max=\"10\"\n                                                    name=\"strength\" \n                                                    placeholder=\"Strength\"\n                                                    onChange={onChange}\n                                                    required\n                                                    value={strength}\n                                                />\n                                            </div>\n                                            <div className=\"col-3\">\n                                                <input \n                                                    type=\"number\" \n                                                    className=\"form-control\" \n                                                    min=\"1\" \n                                                    max=\"10\"\n                                                    name=\"endurance\" \n                                                    placeholder=\"Endurance\"\n                                                    onChange={onChange}\n                                                    value={endurance}\n                                                    required\n                                                />\n                                            </div>\n                                            <div className=\"col-3\">\n                                                <input \n                                                    type=\"number\" \n                                                    className=\"form-control\" \n                                                    min=\"1\" \n                                                    max=\"10\"\n                                                    name=\"firepower\" \n                                                    placeholder=\"Firepower\"\n                                                    onChange={onChange}\n                                                    value={firepower}\n                                                    required\n                                                />\n                                            </div>\n                                            <div className=\"col-3\">\n                                                <input \n                                                    type=\"number\" \n                                                    className=\"form-control\" \n                                                    min=\"1\" \n                                                    max=\"10\"\n                                                    name=\"intelligence\" \n                                                    placeholder=\"Intelligence\"\n                                                    onChange={onChange}\n                                                    value={intelligence}\n                                                    required\n                                                />\n                                            </div>\n                                            <div className=\"col-3\">\n                                                <input \n                                                    type=\"number\" \n                                                    className=\"form-control\" \n                                                    min=\"1\" \n                                                    max=\"10\"\n                                                    name=\"rank\" \n                                                    placeholder=\"Rank\"\n                                                    value={rank}\n                                                    onChange={onChange}\n                                                    required\n                                                />\n                                            </div>\n                                            <div className=\"col-3\">\n                                                <input \n                                                    type=\"number\" \n                                                    className=\"form-control\" \n                                                    min=\"1\" \n                                                    max=\"10\"\n                                                    name=\"skill\" \n                                                    placeholder=\"Skill\"\n                                                    value={skill}\n                                                    onChange={onChange}\n                                                    required\n                                                />\n                                            </div>\n                                            <div className=\"col-3\">\n                                                <input \n                                                    type=\"number\" \n                                                    className=\"form-control\" \n                                                    min=\"1\" \n                                                    max=\"10\"\n                                                    name=\"speed\" \n                                                    placeholder=\"Speed\"\n                                                    onChange={onChange}\n                                                    value={speed}\n                                                    required\n                                                />\n                                            </div>\n                                            <div className=\"col-3\">\n                                                <input \n                                                    type=\"number\"\n                                                    className=\"form-control\" \n                                                    min=\"1\" \n                                                    max=\"10\"\n                                                    name=\"courage\" \n                                                    placeholder=\"Courage\"\n                                                    onChange={onChange}\n                                                    value={courage}\n                                                    required\n                                                />\n                                            </div>\n                                            <div className=\"col-12\">\n                                                <button \n                                                    type=\"submit\" \n                                                    onClick={() => {\n                                                        showTableFight(dispatch);\n                                                    }} \n                                                    className=\"btn btn-primary\">\n                                                        Add fighter\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </>\n                )\n            }}\n        </Consumer>\n    )\n}\nexport default Add_Fighter;","import React, {useState} from 'react';\nimport { Consumer } from './Context/Context'\n\nconst List_Fighter_Battle = () => {\n    const [resultBattle,setResultBattle] = useState(false);\n    const fight = (dispatch,fighters) => { \n        dispatch({type: \"FIGHT\", payload: fighters})\n     }\n\n     const showResultBattle  = (dispatch) => {\n        setResultBattle(true)\n        dispatch({type: \"SHOWRESULT\", payload: resultBattle});\n    }\n    return(\n        <Consumer>\n            {value => {\n                const {fighters,showTableFight,dispatch} = value;\n                fighters.reverse();\n                return(\n                    <>\n                     {showTableFight ? \n                       <div className=\"container\">\n                            <div className=\"row\">\n                                <h2>List of fighters</h2>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-md-12\">\n                                <table className=\"table\">\n                                        <thead> \n                                            <tr>\n                                                <th scope=\"col\">Fighter</th>\n                                                <th scope=\"col\">Team</th>\n                                                <th scope=\"col\">Strength</th>\n                                                <th scope=\"col\">Endurance</th>\n                                                <th scope=\"col\">Firepower</th>\n                                                <th scope=\"col\">Intelligence</th>\n                                                <th scope=\"col\">Rank</th>\n                                                <th scope=\"col\">Skill</th>\n                                                <th scope=\"col\">Speed</th>\n                                                <th scope=\"col\">Courage</th>\n                                                <th scope=\"col\">Overall Rating</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                        {\n                                            Object.values(fighters).map((val, index) => (\n                                                <tr key={index}>\n                                                    <td>{val.name}</td>\n                                                    <td>{val.team}</td>\n                                                    <td>{val.abilities.strength}</td>\n                                                    <td>{val.abilities.endurance}</td>\n                                                    <td>{val.abilities.firepower}</td>\n                                                    <td>{val.abilities.intelligence}</td>\n                                                    <td>{val.abilities.rank}</td>\n                                                    <td>{val.abilities.skill}</td>\n                                                    <td>{val.abilities.speed}</td>\n                                                    <td>{val.abilities.courage}</td>\n                                                    <td>{val.abilities.overall}</td>\n                                                </tr>\n                                            ))\n                                        }\n                                        </tbody>\n                                    </table>  \n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-md-12\">\n                                    <button type=\"submit\" className=\"btn btn-danger\" onClick={()=> {\n                                        fight(dispatch,fighters);\n                                        showResultBattle(dispatch);\n                                    }}>Fighter</button>  \n                                </div>\n                            </div>\n                       </div> : \" \" \n                     }\n                    </>\n                )\n            }}\n        </Consumer>\n    )\n}\n\nexport default List_Fighter_Battle;","import React, {useState}  from 'react';\nimport { Consumer } from './Context/Context'\n\nconst Result_Battle = () => {\n    const [numberBattles,setNumberBattles] = useState(0);\n    const [battleResult, setBattleResult] = useState(\"\");\n    const [Alldestroyed, setAlldestroyed] = useState(false);\n    const [survivingFighters, setSurvivingFighters] = useState(false);\n\n    var winnerTeamArray = [];\n    var numberOfSurvivor = [];\n    var isAutoboltSurvivor = true;\n\n    const compareResult = (autoBolts, decepticons) => {\n        const battleField = [] //Field Of Battle\n\n        let autoboltsTeam = battleField[0] = [...autoBolts]; //TODO: create useState\n        let decepticonsTeam = battleField[1] = [...decepticons];\n        let differenceFightersNumber = 0;\n        let survivor;\n        let loseTeamArray = [];\n        let Variautobolt = 0;\n        let Varidecepticons = 0;\n        var battleNum = 0;\n        let pointOfSkillsAuto = 0;\n        let pointOfSkillsDecep = 0;\n        let duplicateOptimos = autoboltsTeam.reduce((acc,val) => (val.name == \"optimus prime\") ? acc + 1 : acc, 0 );\n        let duplicatePredaking = decepticonsTeam.reduce((acc,val) => (val.name == \"predaking\") ? acc + 1 : acc, 0 );\n   \n        for(let i = 0; i < 2; i++){\n            battleField[i] = []\n        }\n        \n        for(let i = 0; i < battleField.length; i++){\n            if(autoboltsTeam.length > decepticonsTeam.length){\n                differenceFightersNumber = autoboltsTeam.length - decepticonsTeam.length;\n                for(let i = 0; i < differenceFightersNumber; i++) {\n                    survivor = autoboltsTeam.pop();\n                    numberOfSurvivor.push(survivor);\n                }\n            } else {\n                differenceFightersNumber = decepticonsTeam.length - autoboltsTeam.length;\n                for(let i = 0; i < differenceFightersNumber; i++) {\n                    survivor = decepticonsTeam.pop();\n                    numberOfSurvivor.push(survivor);\n                }\n            }\n        }\n\n        for( let i = 0; i < autoboltsTeam.length; i++){\n            if(autoboltsTeam[i].team > decepticonsTeam[i].team){\n                pointOfSkillsAuto++;\n            } else {\n                pointOfSkillsDecep++\n            }\n        } \n        for(let i = 0; i < autoboltsTeam.length; i++){\n            if(autoboltsTeam[i].name.toLowerCase() === \"optimus prime\" && decepticonsTeam[i].name.toLowerCase() === \"predaking\"|| (duplicateOptimos > 1 || duplicatePredaking > 1)){\n                setAlldestroyed(true);\n                battleNum++;\n                setNumberBattles(battleNum);              \n            }\n            else if(pointOfSkillsAuto >= 3){\n                winnerTeamArray.push(autoboltsTeam[i].name);\n                loseTeamArray.push(decepticonsTeam[i].name);\n                Variautobolt++;\n                battleNum++;\n                setNumberBattles(battleNum);\n            } else if(pointOfSkillsDecep >= 3){\n                winnerTeamArray.push(decepticonsTeam[i].name);\n                loseTeamArray.push(autoboltsTeam[i].name);\n                Varidecepticons++;\n                battleNum++;\n                setNumberBattles(battleNum);\n            }\n             else if(autoboltsTeam[i].name.toLowerCase() === \"optimus prime\" && decepticonsTeam[i].name.toLowerCase() !== \"predaking\"){\n                winnerTeamArray.push(autoboltsTeam[i].name);\n                loseTeamArray.push(decepticonsTeam[i].name);\n                Variautobolt++;\n                battleNum++;\n                setNumberBattles(battleNum);\n             } else if(decepticonsTeam[i].name.toLowerCase() === \"predaking\" && autoboltsTeam[i].name.toLowerCase() !== \"optimus prime\") {\n                winnerTeamArray.push(decepticonsTeam[i].name);\n                loseTeamArray.push(autoboltsTeam[i].name);\n                Varidecepticons++\n                battleNum++;\n                setNumberBattles(battleNum);\n             } else if(parseInt(autoboltsTeam[i].abilities.courage) > parseInt(decepticonsTeam[i].abilities.courage) && parseInt(autoboltsTeam[i].abilities.courage) - parseInt(decepticonsTeam[i].abilities.courage) >= 4){ \n                winnerTeamArray.push(autoboltsTeam[i].name);\n                loseTeamArray.push(decepticonsTeam[i].name);\n                Variautobolt++;\n                battleNum++;\n                setNumberBattles(battleNum);\n\n             } else if(parseInt(decepticonsTeam[i].abilities.courage) > parseInt(autoboltsTeam[i].abilities.courage) && parseInt(decepticonsTeam[i].abilities.courage) - parseInt(autoboltsTeam[i].abilities.courage) >= 4){ \n                winnerTeamArray.push(autoboltsTeam[i].name);\n                loseTeamArray.push(decepticonsTeam[i].name);\n                Variautobolt++;\n                battleNum++;\n                setNumberBattles(battleNum);\n             } else if(parseInt(autoboltsTeam[i].abilities.strength) > parseInt(decepticonsTeam[i].abilities.strength) && parseInt(autoboltsTeam[i].abilities.strength) - parseInt(decepticonsTeam[i].abilities.strength) >= 4){ \n                winnerTeamArray.push(autoboltsTeam[i].name);\n                loseTeamArray.push(decepticonsTeam[i].name);\n                Variautobolt++;\n                battleNum++;\n                setNumberBattles(battleNum);\n             } \n             else if(parseInt(decepticonsTeam[i].abilities.strength) > parseInt(autoboltsTeam[i].abilities.strength) && parseInt(decepticonsTeam[i].abilities.strength) - parseInt(autoboltsTeam[i].abilities.strength) >= 4){\n                winnerTeamArray.push(autoboltsTeam[i].name);\n                loseTeamArray.push(decepticonsTeam[i].name);\n                Variautobolt++;\n                battleNum++;\n                setNumberBattles(battleNum);\n             } \n             else if(parseInt(autoboltsTeam[i].abilities.overall === decepticonsTeam[i].abilities.overall)){\n                Variautobolt = Variautobolt;\n                Varidecepticons = Varidecepticons;\n                battleNum++;\n                setNumberBattles(battleNum);\n             } else if(autoboltsTeam[i].abilities.overall > decepticonsTeam[i].abilities.overall){\n                winnerTeamArray.push(autoboltsTeam[i].name);\n                loseTeamArray.push(decepticonsTeam[i].name);\n                Variautobolt++;\n                battleNum++;\n                setNumberBattles(battleNum);\n            } else {\n                winnerTeamArray.push(decepticonsTeam[i].name);\n                loseTeamArray.push(autoboltsTeam[i].name);\n                Varidecepticons++\n                battleNum++;\n                setNumberBattles(battleNum);\n                }\n            }\n            if(Alldestroyed == true) {\n                setBattleResult(\"All fighters were destroyed\")\n             } else if(Variautobolt > Varidecepticons){\n                isAutoboltSurvivor = numberOfSurvivor.some((val)=> {\n                    return val.team == \"Decepticons\"\n                });\n\n                if(isAutoboltSurvivor) {\n                    setSurvivingFighters(true);\n                }\n                setBattleResult(\"The winning team is AutoBolt\");\n            }else if(Variautobolt == 0 && Varidecepticons == 0){\n                setBattleResult(\"The fight ended without winners\")\n            } else {\n                isAutoboltSurvivor = numberOfSurvivor.some((val)=> {\n                    return val.team == \"Autobots\"\n                });\n\n                if(isAutoboltSurvivor) {\n                    setSurvivingFighters(true);\n                }\n                setBattleResult(\"The winning team is Decepticon\");\n            }\n    }\n    return(\n        <Consumer>\n            {value => {\n                const {showResultBattle,autobotsTeam,decepticonsTeam} = value;\n                compareResult(autobotsTeam,decepticonsTeam);\n                return(\n                    <>\n                    \n                    {showResultBattle ? \n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <h2>Battle Result</h2>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"stage\">\n                                    <ul>\n                                        <li><span>{numberBattles}</span> Battles</li>\n                                        <li>{battleResult}</li>\n                                        {Alldestroyed == false ? <li>\n                                            <ul>\n                                                <li>The Winning Fighters are:</li>\n                                                {winnerTeamArray.map((val, key) => (\n                                                  <li key={key}>{val}</li>\n                                                ))}\n                                            </ul>\n                                        </li> : \" \"}\n                                        {survivingFighters == true ? <li>\n                                            <ul>\n                                                <li>The surviving fighters are:</li>\n                                                    {numberOfSurvivor.map((val, key) => (\n                                                <li key={key}>{val.name}</li>\n                                                ))}\n                                            </ul>\n                                        </li> : \" \"} \n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div> : \" \"\n                    }\n                    </>\n                )\n            }}\n        </Consumer>\n    )\n}\nexport default Result_Battle;\n","import React from 'react';\n\nconst Footer = () => {\n return(\n     <>\n       <footer>\n           <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <p>SOMETIMES EVEN THE WISEST OF MAN OR MACHINE CAN MAKE AN ERROR. - Optimus Prime</p>\n                    </div>\n                </div>\n           </div>\n       </footer>\n     </>\n )\n}\nexport default Footer;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from './Components/Layout/Header-Component';\nimport Instructions from './Components/Layout/Instructions-Components';\nimport Add_Fighter from './Components/Add_Fighter-Components';\nimport List_Fighter_Battle from './Components/List_Fighter_Battle-Components';\nimport Result_Battle from './Components/Result_Battle-Component';\nimport Footer from './Components/Layout/Footer-Component';\nimport { Provider } from './Components/Context/Context';\n\nimport './App.scss';\n\nconst App = () => {\n  return (\n    <Provider>\n      <>\n        <Header />\n        <Instructions />\n        <Add_Fighter />\n        <List_Fighter_Battle />\n        <Result_Battle />\n        <Footer />\n      </>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}